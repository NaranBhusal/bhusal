class Solution {
public:
    int strStr(string haystack, string needle) {
        // Handle the edge case where needle is an empty string
        if (needle.empty()) {
            return 0;
        }

        int haystack_len = haystack.size();
        int needle_len = needle.size();
        
        // Loop through the haystack and check each substring of length equal to the needle
        for (int i = 0; i <= haystack_len - needle_len; i++) {
            // Check if the substring of haystack from index i matches the needle
            if (haystack.substr(i, needle_len) == needle) {
                return i;  // Return the starting index of the first occurrence
            }
        }
        
        return -1;  // If no match is found, return -1
    }
};
